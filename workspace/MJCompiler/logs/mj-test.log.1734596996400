INFO  09:29:44,177 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  09:29:44,340 - #2 program
INFO  09:29:44,341 - #52 Keske
INFO  09:29:44,341 - #9 const
INFO  09:29:44,345 - #52 int
INFO  09:29:44,345 - #52 pi
INFO  09:29:44,346 - #21 =
INFO  09:29:44,346 - #50 3
INFO  09:29:44,346 - #38 ,
INFO  09:29:44,351 - #52 g
INFO  09:29:44,352 - #21 =
INFO  09:29:44,353 - #50 11
INFO  09:29:44,353 - #37 ;
INFO  09:29:44,355 - #52 char
INFO  09:29:44,358 - #52 x
INFO  09:29:44,358 - #38 ,
INFO  09:29:44,361 - #52 y
INFO  09:29:44,361 - #41 [
INFO  09:29:44,361 - #42 ]
INFO  09:29:44,362 - #37 ;
INFO  09:29:44,363 - #52 int
INFO  09:29:44,365 - #52 niz
INFO  09:29:44,366 - #41 [
INFO  09:29:44,368 - #42 ]
INFO  09:29:44,368 - #37 ;
INFO  09:29:44,370 - #9 const
INFO  09:29:44,370 - #52 bool
INFO  09:29:44,371 - #52 t
INFO  09:29:44,371 - #21 =
INFO  09:29:44,372 - #51 1
INFO  09:29:44,372 - #37 ;
INFO  09:29:44,373 - #43 {
INFO  09:29:44,373 - #52 int
INFO  09:29:44,375 - #52 func1
INFO  09:29:44,376 - #39 (
INFO  09:29:44,377 - #52 int
INFO  09:29:44,377 - #52 b
INFO  09:29:44,377 - #38 ,
INFO  09:29:44,380 - #52 char
INFO  09:29:44,381 - #52 c
INFO  09:29:44,381 - #40 )
INFO  09:29:44,382 - #52 int
INFO  09:29:44,391 - #52 x
INFO  09:29:44,391 - #38 ,
INFO  09:29:44,392 - #52 y
INFO  09:29:44,392 - #41 [
INFO  09:29:44,393 - #42 ]
INFO  09:29:44,393 - #37 ;
INFO  09:29:44,393 - #43 {
INFO  09:29:44,394 - #4 return
INFO  09:29:44,397 - #52 x
INFO  09:29:44,397 - #37 ;
INFO  09:29:44,399 - #44 }
INFO  09:29:44,402 - #5 void
INFO  09:29:44,406 - #52 func2
INFO  09:29:44,406 - #39 (
INFO  09:29:44,406 - #40 )
INFO  09:29:44,408 - #43 {
INFO  09:29:44,408 - #44 }
INFO  09:29:44,408 - #52 int
INFO  09:29:44,408 - #52 inkrement
INFO  09:29:44,409 - #39 (
INFO  09:29:44,409 - #52 int
INFO  09:29:44,409 - #52 a
INFO  09:29:44,410 - #38 ,
INFO  09:29:44,410 - #52 int
INFO  09:29:44,410 - #52 b
INFO  09:29:44,410 - #40 )
INFO  09:29:44,410 - #43 {
INFO  09:29:44,411 - #4 return
INFO  09:29:44,411 - #50 2
INFO  09:29:44,411 - #37 ;
INFO  09:29:44,412 - #44 }
INFO  09:29:44,412 - #5 void
INFO  09:29:44,412 - #52 main
INFO  09:29:44,412 - #39 (
INFO  09:29:44,412 - #40 )
INFO  09:29:44,412 - #52 int
INFO  09:29:44,413 - #52 a
INFO  09:29:44,413 - #38 ,
INFO  09:29:44,413 - #52 c
INFO  09:29:44,413 - #38 ,
INFO  09:29:44,413 - #52 b
INFO  09:29:44,413 - #41 [
INFO  09:29:44,414 - #42 ]
INFO  09:29:44,414 - #37 ;
INFO  09:29:44,414 - #52 int
INFO  09:29:44,414 - #52 x
INFO  09:29:44,415 - #41 [
INFO  09:29:44,415 - #42 ]
INFO  09:29:44,415 - #38 ,
INFO  09:29:44,415 - #52 y
INFO  09:29:44,415 - #37 ;
INFO  09:29:44,416 - #52 char
INFO  09:29:44,416 - #52 eol
INFO  09:29:44,416 - #37 ;
INFO  09:29:44,417 - #52 int
INFO  09:29:44,417 - #52 pom
INFO  09:29:44,419 - #37 ;
INFO  09:29:44,420 - #52 int
INFO  09:29:44,421 - #52 i
INFO  09:29:44,421 - #37 ;
INFO  09:29:44,421 - #43 {
INFO  09:29:44,422 - #3 print
INFO  09:29:44,422 - #39 (
INFO  09:29:44,422 - #52 x
INFO  09:29:44,422 - #41 [
INFO  09:29:44,423 - #50 5
INFO  09:29:44,423 - #42 ]
INFO  09:29:44,423 - #40 )
INFO  09:29:44,423 - #37 ;
INFO  09:29:44,424 - #52 a
INFO  09:29:44,424 - #21 =
INFO  09:29:44,424 - #50 3
INFO  09:29:44,426 - #19 +
INFO  09:29:44,427 - #52 b
INFO  09:29:44,429 - #41 [
INFO  09:29:44,430 - #50 2
INFO  09:29:44,430 - #42 ]
INFO  09:29:44,430 - #22 *
INFO  09:29:44,431 - #50 2
INFO  09:29:44,435 - #37 ;
INFO  09:29:44,437 - #10 if
INFO  09:29:44,437 - #39 (
INFO  09:29:44,437 - #52 i
INFO  09:29:44,438 - #25 ==
INFO  09:29:44,438 - #50 2
INFO  09:29:44,441 - #40 )
INFO  09:29:44,442 - #52 ibool
INFO  09:29:44,446 - #21 =
INFO  09:29:44,446 - #51 1
INFO  09:29:44,447 - #37 ;
INFO  09:29:44,447 - #37 ;
ERROR 09:29:44,447 - 
Sintaksna greska na liniji 32
ERROR 09:29:44,448 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 32
