INFO  15:59:32,390 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  15:59:32,518 - #2 program
INFO  15:59:32,518 - #51 test302
INFO  15:59:32,518 - #51 int
INFO  15:59:32,521 - #51 i
INFO  15:59:32,521 - #36 ;
INFO  15:59:32,523 - #51 bool
INFO  15:59:32,526 - #51 ibool
INFO  15:59:32,526 - #36 ;
INFO  15:59:32,526 - #51 int
INFO  15:59:32,527 - #51 niz2
INFO  15:59:32,527 - #36 ;
INFO  15:59:32,527 - #51 int
INFO  15:59:32,528 - #51 niz
INFO  15:59:32,528 - #40 [
INFO  15:59:32,528 - #41 ]
INFO  15:59:32,528 - #36 ;
INFO  15:59:32,528 - #51 int
INFO  15:59:32,528 - #51 a
INFO  15:59:32,528 - #36 ;
INFO  15:59:32,528 - #42 {
INFO  15:59:32,529 - #51 int
INFO  15:59:32,531 - #51 sum
INFO  15:59:32,532 - #38 (
INFO  15:59:32,532 - #51 int
INFO  15:59:32,532 - #51 z
INFO  15:59:32,532 - #37 ,
INFO  15:59:32,535 - #51 int
INFO  15:59:32,535 - #51 d
INFO  15:59:32,535 - #39 )
INFO  15:59:32,536 - #42 {
INFO  15:59:32,540 - #4 return
INFO  15:59:32,542 - #51 z
INFO  15:59:32,542 - #18 +
INFO  15:59:32,544 - #51 d
INFO  15:59:32,548 - #36 ;
INFO  15:59:32,548 - #43 }
INFO  15:59:32,549 - #51 int
INFO  15:59:32,552 - #51 inkrement
INFO  15:59:32,552 - #38 (
INFO  15:59:32,552 - #51 int
INFO  15:59:32,553 - #51 a
INFO  15:59:32,553 - #37 ,
INFO  15:59:32,554 - #51 int
INFO  15:59:32,554 - #51 inc
INFO  15:59:32,554 - #39 )
INFO  15:59:32,555 - #51 int
INFO  15:59:32,555 - #51 pom
INFO  15:59:32,555 - #36 ;
INFO  15:59:32,556 - #42 {
INFO  15:59:32,559 - #10 if
INFO  15:59:32,560 - #38 (
INFO  15:59:32,560 - #51 inc
INFO  15:59:32,561 - #24 ==
INFO  15:59:32,561 - #49 1
INFO  15:59:32,564 - #39 )
INFO  15:59:32,567 - #51 pom
INFO  15:59:32,569 - #20 =
INFO  15:59:32,570 - #49 1
INFO  15:59:32,571 - #36 ;
INFO  15:59:32,572 - #8 else
INFO  15:59:32,572 - #10 if
INFO  15:59:32,573 - #38 (
INFO  15:59:32,574 - #51 inc
INFO  15:59:32,576 - #24 ==
INFO  15:59:32,577 - #49 2
INFO  15:59:32,578 - #39 )
INFO  15:59:32,578 - #51 pom
INFO  15:59:32,579 - #20 =
INFO  15:59:32,579 - #51 a
INFO  15:59:32,579 - #36 ;
INFO  15:59:32,580 - #4 return
INFO  15:59:32,582 - #51 sum
INFO  15:59:32,582 - #38 (
INFO  15:59:32,584 - #51 a
INFO  15:59:32,584 - #37 ,
INFO  15:59:32,585 - #51 pom
INFO  15:59:32,585 - #39 )
INFO  15:59:32,586 - #36 ;
INFO  15:59:32,586 - #43 }
INFO  15:59:32,587 - #51 bool
INFO  15:59:32,587 - #51 verify
INFO  15:59:32,587 - #38 (
INFO  15:59:32,587 - #39 )
INFO  15:59:32,589 - #42 {
INFO  15:59:32,589 - #3 print
INFO  15:59:32,589 - #38 (
INFO  15:59:32,591 - #52 v
INFO  15:59:32,592 - #39 )
INFO  15:59:32,592 - #36 ;
INFO  15:59:32,592 - #4 return
INFO  15:59:32,593 - #50 0
INFO  15:59:32,593 - #36 ;
INFO  15:59:32,594 - #43 }
INFO  15:59:32,594 - #51 int
INFO  15:59:32,595 - #51 f1
INFO  15:59:32,595 - #38 (
INFO  15:59:32,595 - #51 int
INFO  15:59:32,596 - #51 arg
INFO  15:59:32,596 - #39 )
INFO  15:59:32,596 - #42 {
INFO  15:59:32,596 - #3 print
INFO  15:59:32,597 - #38 (
INFO  15:59:32,597 - #51 arg
INFO  15:59:32,597 - #39 )
INFO  15:59:32,597 - #36 ;
INFO  15:59:32,597 - #3 print
INFO  15:59:32,598 - #38 (
INFO  15:59:32,598 - #51 eol
INFO  15:59:32,598 - #39 )
INFO  15:59:32,598 - #36 ;
INFO  15:59:32,598 - #4 return
INFO  15:59:32,599 - #51 arg
INFO  15:59:32,599 - #21 *
INFO  15:59:32,600 - #49 2
INFO  15:59:32,603 - #36 ;
INFO  15:59:32,604 - #43 }
INFO  15:59:32,604 - #5 void
INFO  15:59:32,604 - #51 main
INFO  15:59:32,605 - #38 (
INFO  15:59:32,605 - #39 )
INFO  15:59:32,605 - #42 {
INFO  15:59:32,606 - #10 if
INFO  15:59:32,608 - #38 (
INFO  15:59:32,609 - #49 1
INFO  15:59:32,609 - #25 !=
INFO  15:59:32,609 - #49 1
INFO  15:59:32,611 - #39 )
INFO  15:59:32,611 - #3 print
INFO  15:59:32,612 - #38 (
INFO  15:59:32,612 - #19 -
INFO  15:59:32,612 - #49 6
INFO  15:59:32,613 - #39 )
INFO  15:59:32,613 - #36 ;
INFO  15:59:32,613 - #8 else
INFO  15:59:32,614 - #3 print
INFO  15:59:32,614 - #38 (
INFO  15:59:32,614 - #49 0
INFO  15:59:32,615 - #39 )
INFO  15:59:32,615 - #36 ;
INFO  15:59:32,615 - #3 print
INFO  15:59:32,615 - #38 (
INFO  15:59:32,616 - #51 eol
INFO  15:59:32,617 - #39 )
INFO  15:59:32,617 - #36 ;
INFO  15:59:32,617 - #51 ibool
INFO  15:59:32,619 - #20 =
INFO  15:59:32,619 - #50 0
INFO  15:59:32,619 - #36 ;
INFO  15:59:32,620 - #51 i
INFO  15:59:32,620 - #20 =
INFO  15:59:32,620 - #49 0
INFO  15:59:32,621 - #36 ;
INFO  15:59:32,622 - #44 do
INFO  15:59:32,622 - #42 {
INFO  15:59:32,626 - #10 if
INFO  15:59:32,626 - #38 (
INFO  15:59:32,626 - #51 i
INFO  15:59:32,627 - #24 ==
INFO  15:59:32,627 - #49 2
INFO  15:59:32,627 - #39 )
INFO  15:59:32,627 - #51 ibool
INFO  15:59:32,628 - #20 =
INFO  15:59:32,628 - #50 1
INFO  15:59:32,628 - #36 ;
INFO  15:59:32,628 - #43 }
INFO  15:59:32,629 - #45 while
INFO  15:59:32,629 - #38 (
INFO  15:59:32,629 - #51 i
INFO  15:59:32,629 - #28 <
INFO  15:59:32,629 - #49 5
INFO  15:59:32,631 - #37 ,
INFO  15:59:32,631 - #51 i
INFO  15:59:32,631 - #32 ++
INFO  15:59:32,632 - #39 )
INFO  15:59:32,632 - #36 ;
INFO  15:59:32,632 - #10 if
INFO  15:59:32,633 - #38 (
INFO  15:59:32,633 - #51 ibool
INFO  15:59:32,634 - #39 )
INFO  15:59:32,634 - #10 if
INFO  15:59:32,634 - #38 (
INFO  15:59:32,634 - #51 i
INFO  15:59:32,635 - #24 ==
INFO  15:59:32,635 - #49 5
INFO  15:59:32,635 - #39 )
INFO  15:59:32,635 - #3 print
INFO  15:59:32,635 - #38 (
INFO  15:59:32,636 - #49 1
INFO  15:59:32,636 - #39 )
INFO  15:59:32,636 - #36 ;
INFO  15:59:32,636 - #8 else
INFO  15:59:32,637 - #3 print
INFO  15:59:32,637 - #38 (
INFO  15:59:32,637 - #19 -
INFO  15:59:32,637 - #49 1
INFO  15:59:32,637 - #39 )
INFO  15:59:32,638 - #36 ;
INFO  15:59:32,638 - #51 a
INFO  15:59:32,638 - #20 =
INFO  15:59:32,638 - #49 2
INFO  15:59:32,638 - #36 ;
INFO  15:59:32,639 - #51 niz
INFO  15:59:32,639 - #20 =
INFO  15:59:32,639 - #11 new
INFO  15:59:32,639 - #51 int
INFO  15:59:32,639 - #40 [
INFO  15:59:32,639 - #49 3
INFO  15:59:32,640 - #41 ]
INFO  15:59:32,640 - #36 ;
INFO  15:59:32,641 - #51 niz
INFO  15:59:32,641 - #40 [
INFO  15:59:32,644 - #49 0
INFO  15:59:32,644 - #41 ]
INFO  15:59:32,644 - #20 =
INFO  15:59:32,645 - #49 1
INFO  15:59:32,645 - #21 *
INFO  15:59:32,645 - #51 a
INFO  15:59:32,645 - #36 ;
INFO  15:59:32,645 - #51 niz
INFO  15:59:32,645 - #40 [
INFO  15:59:32,646 - #49 1
INFO  15:59:32,646 - #41 ]
INFO  15:59:32,646 - #20 =
INFO  15:59:32,646 - #49 2
INFO  15:59:32,646 - #21 *
INFO  15:59:32,647 - #51 a
INFO  15:59:32,647 - #36 ;
INFO  15:59:32,647 - #51 niz
INFO  15:59:32,647 - #40 [
INFO  15:59:32,647 - #49 2
INFO  15:59:32,647 - #41 ]
INFO  15:59:32,648 - #20 =
INFO  15:59:32,648 - #51 sum
INFO  15:59:32,648 - #38 (
INFO  15:59:32,648 - #51 niz
INFO  15:59:32,648 - #40 [
INFO  15:59:32,649 - #49 1
INFO  15:59:32,649 - #41 ]
INFO  15:59:32,649 - #37 ,
INFO  15:59:32,649 - #51 niz
INFO  15:59:32,649 - #40 [
INFO  15:59:32,650 - #49 0
INFO  15:59:32,650 - #41 ]
INFO  15:59:32,650 - #39 )
INFO  15:59:32,650 - #21 *
INFO  15:59:32,650 - #51 a
INFO  15:59:32,651 - #18 +
INFO  15:59:32,651 - #49 1
INFO  15:59:32,651 - #36 ;
INFO  15:59:32,651 - #10 if
INFO  15:59:32,651 - #38 (
INFO  15:59:32,651 - #51 verify
INFO  15:59:32,652 - #38 (
INFO  15:59:32,652 - #39 )
INFO  15:59:32,654 - #31 ||
INFO  15:59:32,654 - #51 niz
INFO  15:59:32,654 - #40 [
INFO  15:59:32,654 - #49 2
INFO  15:59:32,655 - #41 ]
INFO  15:59:32,655 - #24 ==
INFO  15:59:32,655 - #49 4
INFO  15:59:32,655 - #39 )
INFO  15:59:32,656 - #3 print
INFO  15:59:32,656 - #38 (
INFO  15:59:32,656 - #51 ord
INFO  15:59:32,656 - #38 (
INFO  15:59:32,656 - #52 A
INFO  15:59:32,656 - #39 )
INFO  15:59:32,657 - #39 )
INFO  15:59:32,657 - #36 ;
INFO  15:59:32,657 - #8 else
INFO  15:59:32,658 - #3 print
INFO  15:59:32,658 - #38 (
INFO  15:59:32,658 - #51 ord
INFO  15:59:32,658 - #38 (
INFO  15:59:32,658 - #52 a
INFO  15:59:32,659 - #39 )
INFO  15:59:32,659 - #39 )
INFO  15:59:32,659 - #36 ;
INFO  15:59:32,659 - #3 print
INFO  15:59:32,659 - #38 (
INFO  15:59:32,659 - #51 eol
INFO  15:59:32,660 - #39 )
INFO  15:59:32,660 - #36 ;
INFO  15:59:32,660 - #51 i
INFO  15:59:32,660 - #20 =
INFO  15:59:32,661 - #49 0
INFO  15:59:32,661 - #36 ;
INFO  15:59:32,661 - #44 do
INFO  15:59:32,661 - #42 {
INFO  15:59:32,661 - #10 if
INFO  15:59:32,661 - #38 (
INFO  15:59:32,661 - #51 i
INFO  15:59:32,661 - #24 ==
INFO  15:59:32,662 - #49 3
INFO  15:59:32,662 - #39 )
INFO  15:59:32,662 - #42 {
INFO  15:59:32,662 - #51 i
INFO  15:59:32,662 - #32 ++
INFO  15:59:32,662 - #36 ;
INFO  15:59:32,662 - #15 continue
INFO  15:59:32,663 - #36 ;
INFO  15:59:32,663 - #43 }
INFO  15:59:32,664 - #10 if
INFO  15:59:32,664 - #38 (
INFO  15:59:32,664 - #51 i
INFO  15:59:32,664 - #24 ==
INFO  15:59:32,665 - #49 4
INFO  15:59:32,665 - #39 )
INFO  15:59:32,665 - #6 break
INFO  15:59:32,665 - #36 ;
INFO  15:59:32,665 - #51 i
INFO  15:59:32,666 - #20 =
INFO  15:59:32,666 - #51 inkrement
INFO  15:59:32,666 - #38 (
INFO  15:59:32,666 - #51 i
INFO  15:59:32,666 - #37 ,
INFO  15:59:32,666 - #49 1
INFO  15:59:32,667 - #39 )
INFO  15:59:32,667 - #36 ;
INFO  15:59:32,667 - #43 }
INFO  15:59:32,667 - #45 while
INFO  15:59:32,667 - #38 (
INFO  15:59:32,667 - #51 i
INFO  15:59:32,667 - #28 <
INFO  15:59:32,667 - #49 10
INFO  15:59:32,667 - #39 )
INFO  15:59:32,668 - #36 ;
INFO  15:59:32,668 - #10 if
INFO  15:59:32,668 - #38 (
INFO  15:59:32,668 - #51 i
INFO  15:59:32,668 - #20 =
ERROR 15:59:32,668 - 
Sintaksna greska na liniji 74
ERROR 15:59:32,668 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 74
