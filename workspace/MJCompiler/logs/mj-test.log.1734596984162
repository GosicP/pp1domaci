INFO  09:29:20,449 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  09:29:20,633 - #2 program
INFO  09:29:20,634 - #52 Keske
INFO  09:29:20,635 - #9 const
INFO  09:29:20,639 - #52 int
INFO  09:29:20,640 - #52 pi
INFO  09:29:20,642 - #21 =
INFO  09:29:20,643 - #50 3
INFO  09:29:20,643 - #38 ,
INFO  09:29:20,648 - #52 g
INFO  09:29:20,648 - #21 =
INFO  09:29:20,649 - #50 11
INFO  09:29:20,649 - #37 ;
INFO  09:29:20,649 - #52 char
INFO  09:29:20,652 - #52 x
INFO  09:29:20,653 - #38 ,
INFO  09:29:20,655 - #52 y
INFO  09:29:20,655 - #41 [
INFO  09:29:20,656 - #42 ]
INFO  09:29:20,656 - #37 ;
INFO  09:29:20,659 - #52 int
INFO  09:29:20,662 - #52 niz
INFO  09:29:20,662 - #41 [
INFO  09:29:20,664 - #42 ]
INFO  09:29:20,664 - #37 ;
INFO  09:29:20,664 - #9 const
INFO  09:29:20,664 - #52 bool
INFO  09:29:20,665 - #52 t
INFO  09:29:20,665 - #21 =
INFO  09:29:20,665 - #51 1
INFO  09:29:20,666 - #37 ;
INFO  09:29:20,666 - #43 {
INFO  09:29:20,667 - #52 int
INFO  09:29:20,669 - #52 func1
INFO  09:29:20,669 - #39 (
INFO  09:29:20,670 - #52 int
INFO  09:29:20,670 - #52 b
INFO  09:29:20,670 - #38 ,
INFO  09:29:20,674 - #52 char
INFO  09:29:20,674 - #52 c
INFO  09:29:20,675 - #40 )
INFO  09:29:20,677 - #52 int
INFO  09:29:20,684 - #52 x
INFO  09:29:20,684 - #38 ,
INFO  09:29:20,685 - #52 y
INFO  09:29:20,685 - #41 [
INFO  09:29:20,685 - #42 ]
INFO  09:29:20,686 - #37 ;
INFO  09:29:20,686 - #43 {
INFO  09:29:20,687 - #4 return
INFO  09:29:20,689 - #52 x
INFO  09:29:20,692 - #37 ;
INFO  09:29:20,695 - #44 }
INFO  09:29:20,696 - #5 void
INFO  09:29:20,702 - #52 func2
INFO  09:29:20,702 - #39 (
INFO  09:29:20,703 - #40 )
INFO  09:29:20,706 - #43 {
INFO  09:29:20,707 - #44 }
INFO  09:29:20,707 - #52 int
INFO  09:29:20,708 - #52 inkrement
INFO  09:29:20,709 - #39 (
INFO  09:29:20,709 - #52 int
INFO  09:29:20,709 - #52 a
INFO  09:29:20,710 - #38 ,
INFO  09:29:20,710 - #52 int
INFO  09:29:20,711 - #52 b
INFO  09:29:20,711 - #40 )
INFO  09:29:20,711 - #43 {
INFO  09:29:20,712 - #4 return
INFO  09:29:20,712 - #50 2
INFO  09:29:20,712 - #37 ;
INFO  09:29:20,713 - #44 }
INFO  09:29:20,713 - #5 void
INFO  09:29:20,713 - #52 main
INFO  09:29:20,714 - #39 (
INFO  09:29:20,714 - #40 )
INFO  09:29:20,714 - #52 int
INFO  09:29:20,714 - #52 a
INFO  09:29:20,714 - #38 ,
INFO  09:29:20,714 - #52 c
INFO  09:29:20,715 - #38 ,
INFO  09:29:20,715 - #52 b
INFO  09:29:20,715 - #41 [
INFO  09:29:20,715 - #42 ]
INFO  09:29:20,716 - #37 ;
INFO  09:29:20,716 - #52 int
INFO  09:29:20,716 - #52 x
INFO  09:29:20,717 - #41 [
INFO  09:29:20,717 - #42 ]
INFO  09:29:20,717 - #38 ,
INFO  09:29:20,718 - #52 y
INFO  09:29:20,718 - #37 ;
INFO  09:29:20,718 - #52 char
INFO  09:29:20,719 - #52 eol
INFO  09:29:20,719 - #37 ;
INFO  09:29:20,719 - #52 int
INFO  09:29:20,719 - #52 pom
INFO  09:29:20,720 - #37 ;
INFO  09:29:20,720 - #52 int
INFO  09:29:20,721 - #52 i
INFO  09:29:20,721 - #37 ;
INFO  09:29:20,721 - #43 {
INFO  09:29:20,722 - #3 print
INFO  09:29:20,722 - #39 (
INFO  09:29:20,722 - #52 x
INFO  09:29:20,725 - #41 [
INFO  09:29:20,726 - #50 5
INFO  09:29:20,726 - #42 ]
INFO  09:29:20,726 - #40 )
INFO  09:29:20,727 - #37 ;
INFO  09:29:20,727 - #52 a
INFO  09:29:20,728 - #21 =
INFO  09:29:20,728 - #50 3
INFO  09:29:20,731 - #19 +
INFO  09:29:20,732 - #52 b
INFO  09:29:20,735 - #41 [
INFO  09:29:20,735 - #50 2
INFO  09:29:20,735 - #42 ]
INFO  09:29:20,736 - #22 *
INFO  09:29:20,737 - #50 2
INFO  09:29:20,743 - #37 ;
INFO  09:29:20,746 - #10 if
INFO  09:29:20,747 - #39 (
INFO  09:29:20,747 - #50 1
INFO  09:29:20,747 - #26 !=
INFO  09:29:20,747 - #50 1
INFO  09:29:20,751 - #40 )
INFO  09:29:20,758 - #3 print
INFO  09:29:20,762 - #39 (
INFO  09:29:20,762 - #20 -
INFO  09:29:20,762 - #50 6
INFO  09:29:20,762 - #40 )
INFO  09:29:20,763 - #37 ;
INFO  09:29:20,763 - #8 else
INFO  09:29:20,763 - #3 print
INFO  09:29:20,764 - #39 (
INFO  09:29:20,764 - #50 0
INFO  09:29:20,764 - #40 )
INFO  09:29:20,765 - #37 ;
INFO  09:29:20,765 - #52 a
INFO  09:29:20,767 - #21 =
INFO  09:29:20,767 - #52 func1
INFO  09:29:20,767 - #39 (
INFO  09:29:20,769 - #52 x
INFO  09:29:20,770 - #41 [
INFO  09:29:20,770 - #50 2
INFO  09:29:20,770 - #42 ]
INFO  09:29:20,771 - #38 ,
INFO  09:29:20,771 - #52 eol
INFO  09:29:20,771 - #40 )
INFO  09:29:20,772 - #37 ;
INFO  09:29:20,776 - #12 read
INFO  09:29:20,777 - #39 (
INFO  09:29:20,778 - #52 x
INFO  09:29:20,778 - #41 [
INFO  09:29:20,778 - #50 2
INFO  09:29:20,778 - #42 ]
INFO  09:29:20,779 - #40 )
INFO  09:29:20,779 - #37 ;
INFO  09:29:20,779 - #44 }
INFO  09:29:20,779 - #44 }
INFO  09:29:20,788 - Program(
  ProgramName(
   Keske
  ) [ProgramName]
  ConVarDeclListCon(
    ConVarDeclListVar(
      ConVarDeclListVar(
        ConVarDeclListCon(
          ConVarDeclListEpsilon(
          ) [ConVarDeclListEpsilon]
          ConDecList(
            TypeIdent(
             int
            ) [TypeIdent]
            ConDecl(
             pi
              ConstantN(
               3
              ) [ConstantN]
            ) [ConDecl]
            ConDeclMoreComma(
              ConDeclMoreEpsilon(
              ) [ConDeclMoreEpsilon]
              ConDecl(
               g
                ConstantN(
                 11
                ) [ConstantN]
              ) [ConDecl]
            ) [ConDeclMoreComma]
          ) [ConDecList]
        ) [ConVarDeclListCon]
        VarDeclList(
          TypeIdent(
           char
          ) [TypeIdent]
          ArraySquareIdent(
           x
          ) [ArraySquareIdent]
          VarDeclMoreWithSquares(
            VarDeclMoreEpsilon(
            ) [VarDeclMoreEpsilon]
            ArraySquarePresent(
             y
            ) [ArraySquarePresent]
          ) [VarDeclMoreWithSquares]
        ) [VarDeclList]
      ) [ConVarDeclListVar]
      VarDeclList(
        TypeIdent(
         int
        ) [TypeIdent]
        ArraySquarePresent(
         niz
        ) [ArraySquarePresent]
        VarDeclMoreEpsilon(
        ) [VarDeclMoreEpsilon]
      ) [VarDeclList]
    ) [ConVarDeclListVar]
    ConDecList(
      TypeIdent(
       bool
      ) [TypeIdent]
      ConDecl(
       t
        ConstantB(
         1
        ) [ConstantB]
      ) [ConDecl]
      ConDeclMoreEpsilon(
      ) [ConDeclMoreEpsilon]
    ) [ConDecList]
  ) [ConVarDeclListCon]
  MethodDeclAppend(
    MethodDeclAppend(
      MethodDeclAppend(
        MethodDeclAppend(
          MethodDeclEpsilon(
          ) [MethodDeclEpsilon]
          MethodDecl(
            MethodSignature(
              MethodTypeAndNameNonVoid(
                TypeIdent(
                 int
                ) [TypeIdent]
               func1
              ) [MethodTypeAndNameNonVoid]
              FormParsPresent(
                FormParsVarOrArrayVar(
                  TypeIdent(
                   int
                  ) [TypeIdent]
                 b
                ) [FormParsVarOrArrayVar]
                FormParsMoreSquares(
                  FormParsMoreEpsilon(
                  ) [FormParsMoreEpsilon]
                  FormParsVarOrArrayVar(
                    TypeIdent(
                     char
                    ) [TypeIdent]
                   c
                  ) [FormParsVarOrArrayVar]
                ) [FormParsMoreSquares]
              ) [FormParsPresent]
            ) [MethodSignature]
            MethodDeclVarList(
              MethodDeclVarEpsilon(
              ) [MethodDeclVarEpsilon]
              VarDeclList(
                TypeIdent(
                 int
                ) [TypeIdent]
                ArraySquareIdent(
                 x
                ) [ArraySquareIdent]
                VarDeclMoreWithSquares(
                  VarDeclMoreEpsilon(
                  ) [VarDeclMoreEpsilon]
                  ArraySquarePresent(
                   y
                  ) [ArraySquarePresent]
                ) [VarDeclMoreWithSquares]
              ) [VarDeclList]
            ) [MethodDeclVarList]
            StatementListMultipleStatements(
              StatementListEpsilon(
              ) [StatementListEpsilon]
              StatementReturnExpr(
                ExprSingleTerm(
                  TermFactor(
                    FactorDesignator(
                      DesignatorIdent(
                       x
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [TermFactor]
                ) [ExprSingleTerm]
              ) [StatementReturnExpr]
            ) [StatementListMultipleStatements]
          ) [MethodDecl]
        ) [MethodDeclAppend]
        MethodDecl(
          MethodSignature(
            MethodTypeAndNameVoid(
             func2
            ) [MethodTypeAndNameVoid]
            FormParsEpsilon(
            ) [FormParsEpsilon]
          ) [MethodSignature]
          MethodDeclVarEpsilon(
          ) [MethodDeclVarEpsilon]
          StatementListEpsilon(
          ) [StatementListEpsilon]
        ) [MethodDecl]
      ) [MethodDeclAppend]
      MethodDecl(
        MethodSignature(
          MethodTypeAndNameNonVoid(
            TypeIdent(
             int
            ) [TypeIdent]
           inkrement
          ) [MethodTypeAndNameNonVoid]
          FormParsPresent(
            FormParsVarOrArrayVar(
              TypeIdent(
               int
              ) [TypeIdent]
             a
            ) [FormParsVarOrArrayVar]
            FormParsMoreSquares(
              FormParsMoreEpsilon(
              ) [FormParsMoreEpsilon]
              FormParsVarOrArrayVar(
                TypeIdent(
                 int
                ) [TypeIdent]
               b
              ) [FormParsVarOrArrayVar]
            ) [FormParsMoreSquares]
          ) [FormParsPresent]
        ) [MethodSignature]
        MethodDeclVarEpsilon(
        ) [MethodDeclVarEpsilon]
        StatementListMultipleStatements(
          StatementListEpsilon(
          ) [StatementListEpsilon]
          StatementReturnExpr(
            ExprSingleTerm(
              TermFactor(
                FactorNum(
                 2
                ) [FactorNum]
              ) [TermFactor]
            ) [ExprSingleTerm]
          ) [StatementReturnExpr]
        ) [StatementListMultipleStatements]
      ) [MethodDecl]
    ) [MethodDeclAppend]
    MethodDecl(
      MethodSignature(
        MethodTypeAndNameVoid(
         main
        ) [MethodTypeAndNameVoid]
        FormParsEpsilon(
        ) [FormParsEpsilon]
      ) [MethodSignature]
      MethodDeclVarList(
        MethodDeclVarList(
          MethodDeclVarList(
            MethodDeclVarList(
              MethodDeclVarList(
                MethodDeclVarEpsilon(
                ) [MethodDeclVarEpsilon]
                VarDeclList(
                  TypeIdent(
                   int
                  ) [TypeIdent]
                  ArraySquareIdent(
                   a
                  ) [ArraySquareIdent]
                  VarDeclMoreWithSquares(
                    VarDeclMoreWithSquares(
                      VarDeclMoreEpsilon(
                      ) [VarDeclMoreEpsilon]
                      ArraySquareIdent(
                       c
                      ) [ArraySquareIdent]
                    ) [VarDeclMoreWithSquares]
                    ArraySquarePresent(
                     b
                    ) [ArraySquarePresent]
                  ) [VarDeclMoreWithSquares]
                ) [VarDeclList]
              ) [MethodDeclVarList]
              VarDeclList(
                TypeIdent(
                 int
                ) [TypeIdent]
                ArraySquarePresent(
                 x
                ) [ArraySquarePresent]
                VarDeclMoreWithSquares(
                  VarDeclMoreEpsilon(
                  ) [VarDeclMoreEpsilon]
                  ArraySquareIdent(
                   y
                  ) [ArraySquareIdent]
                ) [VarDeclMoreWithSquares]
              ) [VarDeclList]
            ) [MethodDeclVarList]
            VarDeclList(
              TypeIdent(
               char
              ) [TypeIdent]
              ArraySquareIdent(
               eol
              ) [ArraySquareIdent]
              VarDeclMoreEpsilon(
              ) [VarDeclMoreEpsilon]
            ) [VarDeclList]
          ) [MethodDeclVarList]
          VarDeclList(
            TypeIdent(
             int
            ) [TypeIdent]
            ArraySquareIdent(
             pom
            ) [ArraySquareIdent]
            VarDeclMoreEpsilon(
            ) [VarDeclMoreEpsilon]
          ) [VarDeclList]
        ) [MethodDeclVarList]
        VarDeclList(
          TypeIdent(
           int
          ) [TypeIdent]
          ArraySquareIdent(
           i
          ) [ArraySquareIdent]
          VarDeclMoreEpsilon(
          ) [VarDeclMoreEpsilon]
        ) [VarDeclList]
      ) [MethodDeclVarList]
      StatementListMultipleStatements(
        StatementListMultipleStatements(
          StatementListMultipleStatements(
            StatementListMultipleStatements(
              StatementListMultipleStatements(
                StatementListEpsilon(
                ) [StatementListEpsilon]
                StatementPrintExpr(
                  ExprSingleTerm(
                    TermFactor(
                      FactorDesignator(
                        DesignatorListArray(
                          DesignatorIdent(
                           x
                          ) [DesignatorIdent]
                          ExprSingleTerm(
                            TermFactor(
                              FactorNum(
                               5
                              ) [FactorNum]
                            ) [TermFactor]
                          ) [ExprSingleTerm]
                        ) [DesignatorListArray]
                      ) [FactorDesignator]
                    ) [TermFactor]
                  ) [ExprSingleTerm]
                ) [StatementPrintExpr]
              ) [StatementListMultipleStatements]
              StatementWithDesignator(
                DesignatorStatementAssign(
                  DesignatorIdent(
                   a
                  ) [DesignatorIdent]
                  AssignOp(
                  ) [AssignOp]
                  ExprMultipleTerm(
                    ExprSingleTerm(
                      TermFactor(
                        FactorNum(
                         3
                        ) [FactorNum]
                      ) [TermFactor]
                    ) [ExprSingleTerm]
                    AddopAdd(
                    ) [AddopAdd]
                    TermMul(
                      TermFactor(
                        FactorDesignator(
                          DesignatorListArray(
                            DesignatorIdent(
                             b
                            ) [DesignatorIdent]
                            ExprSingleTerm(
                              TermFactor(
                                FactorNum(
                                 2
                                ) [FactorNum]
                              ) [TermFactor]
                            ) [ExprSingleTerm]
                          ) [DesignatorListArray]
                        ) [FactorDesignator]
                      ) [TermFactor]
                      MulopMultiply(
                      ) [MulopMultiply]
                      FactorNum(
                       2
                      ) [FactorNum]
                    ) [TermMul]
                  ) [ExprMultipleTerm]
                ) [DesignatorStatementAssign]
              ) [StatementWithDesignator]
            ) [StatementListMultipleStatements]
            StatementIf(
              IfCondition(
                ConditionCondTerm(
                  CondTermFact(
                    CondFactDoubleExpr(
                      ExprSingleTerm(
                        TermFactor(
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [TermFactor]
                      ) [ExprSingleTerm]
                      RelopInequality(
                      ) [RelopInequality]
                      ExprSingleTerm(
                        TermFactor(
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [TermFactor]
                      ) [ExprSingleTerm]
                    ) [CondFactDoubleExpr]
                  ) [CondTermFact]
                ) [ConditionCondTerm]
              ) [IfCondition]
              StatementPrintExpr(
                ExprSingleTermMinus(
                  TermFactor(
                    FactorNum(
                     6
                    ) [FactorNum]
                  ) [TermFactor]
                ) [ExprSingleTermMinus]
              ) [StatementPrintExpr]
              ElseConditionExists(
                StatementPrintExpr(
                  ExprSingleTerm(
                    TermFactor(
                      FactorNum(
                       0
                      ) [FactorNum]
                    ) [TermFactor]
                  ) [ExprSingleTerm]
                ) [StatementPrintExpr]
              ) [ElseConditionExists]
            ) [StatementIf]
          ) [StatementListMultipleStatements]
          StatementWithDesignator(
            DesignatorStatementAssign(
              DesignatorIdent(
               a
              ) [DesignatorIdent]
              AssignOp(
              ) [AssignOp]
              ExprSingleTerm(
                TermFactor(
                  FactorDesignatorMethod(
                    FunctionName(
                      DesignatorIdent(
                       func1
                      ) [DesignatorIdent]
                    ) [FunctionName]
                    ActParsExpr(
                      ActParsListExprRecursion(
                        ActParsListExpr(
                          ExprSingleTerm(
                            TermFactor(
                              FactorDesignator(
                                DesignatorListArray(
                                  DesignatorIdent(
                                   x
                                  ) [DesignatorIdent]
                                  ExprSingleTerm(
                                    TermFactor(
                                      FactorNum(
                                       2
                                      ) [FactorNum]
                                    ) [TermFactor]
                                  ) [ExprSingleTerm]
                                ) [DesignatorListArray]
                              ) [FactorDesignator]
                            ) [TermFactor]
                          ) [ExprSingleTerm]
                        ) [ActParsListExpr]
                        ExprSingleTerm(
                          TermFactor(
                            FactorDesignator(
                              DesignatorIdent(
                               eol
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprSingleTerm]
                      ) [ActParsListExprRecursion]
                    ) [ActParsExpr]
                  ) [FactorDesignatorMethod]
                ) [TermFactor]
              ) [ExprSingleTerm]
            ) [DesignatorStatementAssign]
          ) [StatementWithDesignator]
        ) [StatementListMultipleStatements]
        StatementRead(
          DesignatorListArray(
            DesignatorIdent(
             x
            ) [DesignatorIdent]
            ExprSingleTerm(
              TermFactor(
                FactorNum(
                 2
                ) [FactorNum]
              ) [TermFactor]
            ) [ExprSingleTerm]
          ) [DesignatorListArray]
        ) [StatementRead]
      ) [StatementListMultipleStatements]
    ) [MethodDecl]
  ) [MethodDeclAppend]
) [Program]
INFO  09:29:20,793 - ===================================
INFO  09:29:20,846 - ===================================
INFO  09:29:20,848 - Parsiranje uspesno zavrseno!
