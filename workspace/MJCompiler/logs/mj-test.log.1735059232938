INFO  17:53:23,590 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  17:53:23,726 - #2 program
INFO  17:53:23,727 - #51 Keske
INFO  17:53:23,727 - #9 const
INFO  17:53:23,731 - #51 int
INFO  17:53:23,731 - #51 pi
INFO  17:53:23,732 - #20 =
INFO  17:53:23,732 - #49 3
INFO  17:53:23,733 - #37 ,
INFO  17:53:23,737 - #51 g
INFO  17:53:23,738 - #20 =
INFO  17:53:23,738 - #49 11
INFO  17:53:23,738 - #36 ;
INFO  17:53:23,739 - #51 char
INFO  17:53:23,741 - #51 x
INFO  17:53:23,742 - #37 ,
INFO  17:53:23,743 - #51 y
INFO  17:53:23,744 - #40 [
INFO  17:53:23,744 - #41 ]
INFO  17:53:23,744 - #36 ;
INFO  17:53:23,745 - #51 int
INFO  17:53:23,748 - #51 niz
INFO  17:53:23,748 - #40 [
INFO  17:53:23,749 - #41 ]
INFO  17:53:23,750 - #36 ;
INFO  17:53:23,750 - #51 set
INFO  17:53:23,750 - #51 s1
INFO  17:53:23,751 - #37 ,
INFO  17:53:23,753 - #51 s2
INFO  17:53:23,753 - #37 ,
INFO  17:53:23,754 - #51 s3
INFO  17:53:23,755 - #36 ;
INFO  17:53:23,755 - #9 const
INFO  17:53:23,755 - #51 bool
INFO  17:53:23,755 - #51 t
INFO  17:53:23,756 - #20 =
INFO  17:53:23,756 - #50 1
INFO  17:53:23,756 - #36 ;
INFO  17:53:23,756 - #42 {
INFO  17:53:23,757 - #51 int
INFO  17:53:23,758 - #51 sum
INFO  17:53:23,759 - #38 (
INFO  17:53:23,759 - #51 int
INFO  17:53:23,760 - #51 z
INFO  17:53:23,760 - #37 ,
INFO  17:53:23,763 - #51 int
INFO  17:53:23,763 - #51 d
INFO  17:53:23,764 - #39 )
INFO  17:53:23,765 - #42 {
INFO  17:53:23,770 - #4 return
INFO  17:53:23,772 - #51 z
INFO  17:53:23,772 - #18 +
INFO  17:53:23,774 - #51 d
INFO  17:53:23,779 - #36 ;
INFO  17:53:23,780 - #43 }
INFO  17:53:23,781 - #51 int
INFO  17:53:23,784 - #51 func1
INFO  17:53:23,784 - #38 (
INFO  17:53:23,785 - #51 int
INFO  17:53:23,786 - #51 b
INFO  17:53:23,786 - #37 ,
INFO  17:53:23,787 - #51 char
INFO  17:53:23,787 - #51 c
INFO  17:53:23,788 - #39 )
INFO  17:53:23,792 - #51 int
INFO  17:53:23,792 - #51 x
INFO  17:53:23,793 - #37 ,
INFO  17:53:23,793 - #51 y
INFO  17:53:23,794 - #40 [
INFO  17:53:23,795 - #41 ]
INFO  17:53:23,795 - #36 ;
INFO  17:53:23,795 - #42 {
INFO  17:53:23,796 - #4 return
INFO  17:53:23,796 - #51 x
INFO  17:53:23,796 - #36 ;
INFO  17:53:23,797 - #43 }
INFO  17:53:23,797 - #5 void
INFO  17:53:23,797 - #51 func2
INFO  17:53:23,798 - #38 (
INFO  17:53:23,798 - #39 )
INFO  17:53:23,800 - #42 {
INFO  17:53:23,801 - #43 }
INFO  17:53:23,801 - #51 int
INFO  17:53:23,801 - #51 inkrement
INFO  17:53:23,802 - #38 (
INFO  17:53:23,802 - #51 int
INFO  17:53:23,802 - #51 a
INFO  17:53:23,802 - #37 ,
INFO  17:53:23,803 - #51 int
INFO  17:53:23,803 - #51 b
INFO  17:53:23,803 - #39 )
INFO  17:53:23,803 - #42 {
INFO  17:53:23,804 - #4 return
INFO  17:53:23,804 - #49 2
INFO  17:53:23,804 - #36 ;
INFO  17:53:23,805 - #43 }
INFO  17:53:23,805 - #51 bool
INFO  17:53:23,805 - #51 verify
INFO  17:53:23,806 - #38 (
INFO  17:53:23,806 - #51 int
INFO  17:53:23,806 - #51 z
INFO  17:53:23,807 - #37 ,
INFO  17:53:23,807 - #51 bool
INFO  17:53:23,809 - #51 a
INFO  17:53:23,809 - #39 )
INFO  17:53:23,810 - #42 {
INFO  17:53:23,810 - #3 print
INFO  17:53:23,811 - #38 (
INFO  17:53:23,811 - #52 v
INFO  17:53:23,811 - #39 )
INFO  17:53:23,812 - #36 ;
INFO  17:53:23,812 - #4 return
INFO  17:53:23,813 - #50 0
INFO  17:53:23,813 - #36 ;
INFO  17:53:23,814 - #43 }
INFO  17:53:23,814 - #5 void
INFO  17:53:23,815 - #51 f
INFO  17:53:23,815 - #38 (
INFO  17:53:23,816 - #51 char
INFO  17:53:23,816 - #51 ch
INFO  17:53:23,816 - #37 ,
INFO  17:53:23,818 - #51 int
INFO  17:53:23,818 - #51 a
INFO  17:53:23,818 - #37 ,
INFO  17:53:23,819 - #51 int
INFO  17:53:23,819 - #51 arg
INFO  17:53:23,819 - #39 )
INFO  17:53:23,820 - #42 {
INFO  17:53:23,821 - #51 int
INFO  17:53:23,822 - #51 x
ERROR 17:53:23,822 - 
Sintaksna greska na liniji 36
ERROR 17:53:23,822 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 36
